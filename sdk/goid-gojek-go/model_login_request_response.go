/*
goid.gojekapi.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goid_gojek_go

import (
	"encoding/json"
)

// LoginRequestResponse struct for LoginRequestResponse
type LoginRequestResponse struct {
	Data *LoginRequestResponseData `json:"data,omitempty"`
	Success *bool `json:"success,omitempty"`
	Errors *[]interface{} `json:"errors,omitempty"`
}

// NewLoginRequestResponse instantiates a new LoginRequestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginRequestResponse() *LoginRequestResponse {
	this := LoginRequestResponse{}
	return &this
}

// NewLoginRequestResponseWithDefaults instantiates a new LoginRequestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginRequestResponseWithDefaults() *LoginRequestResponse {
	this := LoginRequestResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *LoginRequestResponse) GetData() LoginRequestResponseData {
	if o == nil || o.Data == nil {
		var ret LoginRequestResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponse) GetDataOk() (*LoginRequestResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *LoginRequestResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given LoginRequestResponseData and assigns it to the Data field.
func (o *LoginRequestResponse) SetData(v LoginRequestResponseData) {
	o.Data = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *LoginRequestResponse) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *LoginRequestResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *LoginRequestResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *LoginRequestResponse) GetErrors() []interface{} {
	if o == nil || o.Errors == nil {
		var ret []interface{}
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponse) GetErrorsOk() (*[]interface{}, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *LoginRequestResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []interface{} and assigns it to the Errors field.
func (o *LoginRequestResponse) SetErrors(v []interface{}) {
	o.Errors = &v
}

func (o LoginRequestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableLoginRequestResponse struct {
	value *LoginRequestResponse
	isSet bool
}

func (v NullableLoginRequestResponse) Get() *LoginRequestResponse {
	return v.value
}

func (v *NullableLoginRequestResponse) Set(val *LoginRequestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginRequestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginRequestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginRequestResponse(val *LoginRequestResponse) *NullableLoginRequestResponse {
	return &NullableLoginRequestResponse{value: val, isSet: true}
}

func (v NullableLoginRequestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginRequestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


