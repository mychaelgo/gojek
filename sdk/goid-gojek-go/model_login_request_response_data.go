/*
goid.gojekapi.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goid_gojek_go

import (
	"encoding/json"
)

// LoginRequestResponseData struct for LoginRequestResponseData
type LoginRequestResponseData struct {
	OtpToken *string `json:"otp_token,omitempty"`
	OtpExpiresIn *float32 `json:"otp_expires_in,omitempty"`
	OtpLength *float32 `json:"otp_length,omitempty"`
	NextState *LoginRequestResponseDataNextState `json:"next_state,omitempty"`
}

// NewLoginRequestResponseData instantiates a new LoginRequestResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginRequestResponseData() *LoginRequestResponseData {
	this := LoginRequestResponseData{}
	return &this
}

// NewLoginRequestResponseDataWithDefaults instantiates a new LoginRequestResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginRequestResponseDataWithDefaults() *LoginRequestResponseData {
	this := LoginRequestResponseData{}
	return &this
}

// GetOtpToken returns the OtpToken field value if set, zero value otherwise.
func (o *LoginRequestResponseData) GetOtpToken() string {
	if o == nil || o.OtpToken == nil {
		var ret string
		return ret
	}
	return *o.OtpToken
}

// GetOtpTokenOk returns a tuple with the OtpToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponseData) GetOtpTokenOk() (*string, bool) {
	if o == nil || o.OtpToken == nil {
		return nil, false
	}
	return o.OtpToken, true
}

// HasOtpToken returns a boolean if a field has been set.
func (o *LoginRequestResponseData) HasOtpToken() bool {
	if o != nil && o.OtpToken != nil {
		return true
	}

	return false
}

// SetOtpToken gets a reference to the given string and assigns it to the OtpToken field.
func (o *LoginRequestResponseData) SetOtpToken(v string) {
	o.OtpToken = &v
}

// GetOtpExpiresIn returns the OtpExpiresIn field value if set, zero value otherwise.
func (o *LoginRequestResponseData) GetOtpExpiresIn() float32 {
	if o == nil || o.OtpExpiresIn == nil {
		var ret float32
		return ret
	}
	return *o.OtpExpiresIn
}

// GetOtpExpiresInOk returns a tuple with the OtpExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponseData) GetOtpExpiresInOk() (*float32, bool) {
	if o == nil || o.OtpExpiresIn == nil {
		return nil, false
	}
	return o.OtpExpiresIn, true
}

// HasOtpExpiresIn returns a boolean if a field has been set.
func (o *LoginRequestResponseData) HasOtpExpiresIn() bool {
	if o != nil && o.OtpExpiresIn != nil {
		return true
	}

	return false
}

// SetOtpExpiresIn gets a reference to the given float32 and assigns it to the OtpExpiresIn field.
func (o *LoginRequestResponseData) SetOtpExpiresIn(v float32) {
	o.OtpExpiresIn = &v
}

// GetOtpLength returns the OtpLength field value if set, zero value otherwise.
func (o *LoginRequestResponseData) GetOtpLength() float32 {
	if o == nil || o.OtpLength == nil {
		var ret float32
		return ret
	}
	return *o.OtpLength
}

// GetOtpLengthOk returns a tuple with the OtpLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponseData) GetOtpLengthOk() (*float32, bool) {
	if o == nil || o.OtpLength == nil {
		return nil, false
	}
	return o.OtpLength, true
}

// HasOtpLength returns a boolean if a field has been set.
func (o *LoginRequestResponseData) HasOtpLength() bool {
	if o != nil && o.OtpLength != nil {
		return true
	}

	return false
}

// SetOtpLength gets a reference to the given float32 and assigns it to the OtpLength field.
func (o *LoginRequestResponseData) SetOtpLength(v float32) {
	o.OtpLength = &v
}

// GetNextState returns the NextState field value if set, zero value otherwise.
func (o *LoginRequestResponseData) GetNextState() LoginRequestResponseDataNextState {
	if o == nil || o.NextState == nil {
		var ret LoginRequestResponseDataNextState
		return ret
	}
	return *o.NextState
}

// GetNextStateOk returns a tuple with the NextState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestResponseData) GetNextStateOk() (*LoginRequestResponseDataNextState, bool) {
	if o == nil || o.NextState == nil {
		return nil, false
	}
	return o.NextState, true
}

// HasNextState returns a boolean if a field has been set.
func (o *LoginRequestResponseData) HasNextState() bool {
	if o != nil && o.NextState != nil {
		return true
	}

	return false
}

// SetNextState gets a reference to the given LoginRequestResponseDataNextState and assigns it to the NextState field.
func (o *LoginRequestResponseData) SetNextState(v LoginRequestResponseDataNextState) {
	o.NextState = &v
}

func (o LoginRequestResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OtpToken != nil {
		toSerialize["otp_token"] = o.OtpToken
	}
	if o.OtpExpiresIn != nil {
		toSerialize["otp_expires_in"] = o.OtpExpiresIn
	}
	if o.OtpLength != nil {
		toSerialize["otp_length"] = o.OtpLength
	}
	if o.NextState != nil {
		toSerialize["next_state"] = o.NextState
	}
	return json.Marshal(toSerialize)
}

type NullableLoginRequestResponseData struct {
	value *LoginRequestResponseData
	isSet bool
}

func (v NullableLoginRequestResponseData) Get() *LoginRequestResponseData {
	return v.value
}

func (v *NullableLoginRequestResponseData) Set(val *LoginRequestResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginRequestResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginRequestResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginRequestResponseData(val *LoginRequestResponseData) *NullableLoginRequestResponseData {
	return &NullableLoginRequestResponseData{value: val, isSet: true}
}

func (v NullableLoginRequestResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginRequestResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


